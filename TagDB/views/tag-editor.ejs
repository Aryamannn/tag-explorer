<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tag Editor</title>
    <style>
        .hidden { display: none; }
        .tag-menu {
            position: absolute;
            right: 0;
            margin-top: 4px;
            width: 144px;
            background: black;
            border: 1px solid #ccc;
            border-radius: 6px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            z-index: 10;
        }
        .menu-button {
            width: 100%;
            padding: 8px 16px;
            text-align: left;
            font-size: 14px;
            border-bottom: 1px solid #ccc;
            color: white;
            background: transparent;
            border: none;
            cursor: pointer;
        }
        .delete-button {
            color: #dc2626;
        }
        .tag-container {
            margin-bottom: 8px;
        }
        .subtag-container {
            margin-left: 24px;
            padding-left: 16px;
            border-left: 1px solid #ccc;
        }
        .tag-row {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 8px;
            border-radius: 4px;
        }
        .edit-container {
            display: flex;
            align-items: center;
            gap: 8px;
        }
        .edit-input {
            padding: 4px 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 14px;
        }
        .edit-input:focus {
            outline: none;
            border-color: #3b82f6;
        }
        .button-green { color: #16a34a; }
        .button-red { color: #dc2626; }
        .expand-button {
            background: none;
            border: none;
            cursor: pointer;
            padding: 4px 8px;
            color: #6b7280;
        }
        .menu-toggle {
            background: none;
            border: none;
            cursor: pointer;
            padding: 4px 8px;
            color: black;
        }
        span {
            color: black;
        }
    </style>
</head>
<body>
    <%- include("partials/nav.ejs") %>
    <h1>Tag Editor</h1>

    <div class="w-full min-w-[400px] bg-black rounded-lg shadow">
        <div class="p-4 border-b">
            <h2 class="text-lg font-semibold">Tag Explorer</h2>
        </div>
       
        <div class="p-4">
            <button onclick="addMainTag()" class="flex items-center gap-2 mb-4">
                + Add Tag
            </button>

            <div id="tags-container">
                <% tags.forEach(function(tag) { %>
                    <div class="tag-container" data-tag-id="<%- tag.id %>">
                        <div class="tag-row">
                            <div class="flex items-center gap-2">
                                <button onclick="toggleExpand('<%- tag.id %>')" class="expand-button">
                                    <%- tag.isExpanded ? '▼' : '▶' %>
                                </button>
                                <% if (editingTag && editingTag.id === tag.id && !editingTag.isSubTag) { %>
                                    <div class="edit-container">
                                        <input type="text"
                                               class="edit-input"
                                               value="<%- tag.name %>"
                                               onkeypress="handleKeyPress(event, '<%- tag.id %>', false)"
                                               id="edit-<%- tag.id %>">
                                        <button onclick="saveEdit('<%- tag.id %>', false)" class="button-green">
                                            ✓
                                        </button>
                                        <button onclick="cancelEdit()" class="button-red">
                                            ✗
                                        </button>
                                    </div>
                                <% } else { %>
                                    <span><%- tag.name %></span>
                                <% } %>
                            </div>

                            <div class="relative">
                                <button onclick="toggleMenu('<%- tag.id %>', false)" data-menu-toggle class="menu-toggle">
                                    •••
                                </button>

                                <div id="menu-<%- tag.id %>" class="tag-menu hidden">
                                    <button class="menu-button" onclick="startEditing('<%- tag.id %>', '<%- tag.name %>', false)">
                                        Edit Tag
                                    </button>
                                    <button class="menu-button" onclick="addSubTag('<%- tag.id %>')">
                                        + Add Tag
                                    </button>
                                    <button class="menu-button delete-button" onclick="deleteTag('<%- tag.id %>', false)">
                                        - Delete Tag
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div id="subtags-<%- tag.id %>" class="subtag-container <%= tag.isExpanded ? '' : 'hidden' %>">
                            <% tag.subTags.forEach(function(subTag) { %>
                                <div class="tag-row" data-subtag-id="<%- subTag.id %>">
                                    <div class="ml-6">
                                        <% if (editingTag && editingTag.id === subTag.id && editingTag.isSubTag) { %>
                                            <div class="edit-container">
                                                <input type="text"
                                                       class="edit-input"
                                                       value="<%- subTag.name %>"
                                                       onkeypress="handleKeyPress(event, '<%- subTag.id %>', true, '<%- tag.id %>')"
                                                       id="edit-<%- subTag.id %>">
                                                <button onclick="saveEdit('<%- subTag.id %>', true, '<%- tag.id %>')" class="button-green">
                                                    ✓
                                                </button>
                                                <button onclick="cancelEdit()" class="button-red">
                                                    ✗
                                                </button>
                                            </div>
                                        <% } else { %>
                                            <span><%- subTag.name %></span>
                                        <% } %>
                                    </div>

                                    <div class="relative">
                                        <button onclick="toggleMenu('<%- subTag.id %>', true, '<%- tag.id %>')" data-menu-toggle class="menu-toggle">
                                            •••
                                        </button>

                                        <div id="menu-<%- subTag.id %>" class="tag-menu hidden">
                                            <button class="menu-button" onclick="startEditing('<%- subTag.id %>', '<%- subTag.name %>', true, '<%- tag.id %>')">
                                                Edit Tag
                                            </button>
                                            <button class="menu-button delete-button" onclick="deleteTag('<%- subTag.id %>', true, '<%- tag.id %>')">
                                                - Delete Tag
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>
    </div>
    <script>
        // Click outside handler
        document.addEventListener('click', function(event) {
            if (event.target.closest('[data-menu-toggle]') || event.target.closest('.tag-menu')) {
                return;
            }
            document.querySelectorAll('.tag-menu').forEach(menu => menu.classList.add('hidden'));
        });
    
        function toggleExpand(tagId) {
            const subtagsContainer = document.getElementById(`subtags-${tagId}`);
            const button = event.currentTarget;
            
            subtagsContainer.classList.toggle('hidden');
            
            // Update expand/collapse symbol
            if (subtagsContainer.classList.contains('hidden')) {
                button.textContent = '▶';
            } else {
                button.textContent = '▼';
            }
        }
    
        function toggleMenu(id, isSubTag, parentId) {
            event.stopPropagation();
            const menus = document.querySelectorAll('.tag-menu');
            menus.forEach(menu => {
                if (menu.id !== `menu-${id}`) {
                    menu.classList.add('hidden');
                }
            });
            const menu = document.getElementById(`menu-${id}`);
            menu.classList.toggle('hidden');
        }
    
        async function addMainTag() {
        try {
            const response = await fetch('/tag-editor/tags/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    tag_name: 'New Tag'
                })
            });

            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.error || 'Failed to create tag');
            }

            window.location.reload();
        } catch (error) {
            console.error('Error adding main tag:', error);
            alert('Failed to add tag. Please try again.');
        }
    }

    async function addSubTag(parentId) {
        try {
            const response = await fetch('/tag-editor/tags', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    tag_id: parentId,
                    tag_value: 'New Subtag'
                })
            });

            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.error || 'Failed to create subtag');
            }

            window.location.reload();
        } catch (error) {
            console.error('Error adding subtag:', error);
            alert('Failed to add subtag. Please try again.');
        }
    }
    
        function startEditing(id, name, isSubTag, parentId) {
            const container = document.querySelector(`[data-${isSubTag ? 'subtag' : 'tag'}-id="${id}"]`);
            const span = container.querySelector('span');
            const editContainer = document.createElement('div');
            editContainer.className = 'edit-container';
            editContainer.innerHTML = `
                <input type="text"
                       class="edit-input"
                       value="${name}"
                       onkeypress="handleKeyPress(event, '${id}', ${isSubTag}, '${parentId}')"
                       id="edit-${id}">
                <button onclick="saveEdit('${id}', ${isSubTag}, '${parentId}')" class="button-green">
                    ✓
                </button>
                <button onclick="cancelEdit('${id}', '${name}', ${isSubTag})" class="button-red">
                    ✗
                </button>
            `;
            span.replaceWith(editContainer);
            document.getElementById(`edit-${id}`).focus();
        }
    
        async function saveEdit(id, isSubTag, parentId) {
            try {
                const input = document.getElementById(`edit-${id}`);
                const newName = input.value;
    
                const endpoint = isSubTag ? 'tag_values' : 'tags';
                const response = await fetch(`/tag-editor/${endpoint}/${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(isSubTag ? 
                        { 
                            tag_value: newName,
                            parent_id: parentId 
                        } : { 
                            tag_name: newName 
                        })
                });
    
                if (!response.ok) throw new Error('Failed to update tag');
                window.location.reload();
            } catch (error) {
                console.error('Error saving edit:', error);
                alert('Failed to save changes. Please try again.');
            }
        }
    
        function cancelEdit(id, originalName, isSubTag) {
            const container = document.querySelector(`[data-${isSubTag ? 'subtag' : 'tag'}-id="${id}"]`);
            const editContainer = container.querySelector('.edit-container');
            const span = document.createElement('span');
            span.textContent = originalName;
            editContainer.replaceWith(span);
        }
    
        async function deleteTag(id, isSubTag, parentId) {
            if (!confirm('Are you sure you want to delete this tag?')) {
                return;
            }
    
            try {
                const endpoint = isSubTag ? 'tag_values' : 'tags';
                const response = await fetch(`/tag-editor/${endpoint}/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(isSubTag ? { parent_id: parentId } : {})
                });
    
                if (!response.ok) throw new Error('Failed to delete tag');
                window.location.reload();
            } catch (error) {
                console.error('Error deleting tag:', error);
                alert('Failed to delete tag. Please try again.');
            }
        }
    
        function handleKeyPress(event, id, isSubTag, parentId) {
            if (event.key === 'Enter') {
                saveEdit(id, isSubTag, parentId);
            }
        }
    </script>
</body>
</html>